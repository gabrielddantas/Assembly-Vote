services:
  client:
    build:
      context: ./assembly-vote-client
      dockerfile: Dockerfile
    container_name: assembly-vote-client
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - application-network

  assembly-vote-service:
    build:
      context: ./assembly-vote-service
      dockerfile: Dockerfile
    container_name: assembly-vote-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/db_assembly_vote
      - origin_validation=http://assembly-cpf-service:3001/api
    depends_on:
      db:
        condition: service_healthy
      assembly-cpf-service:
        condition: service_started
    networks:
      - application-network

  assembly-cpf-service:
    build:
      context: ./assembly-cpf-service
      dockerfile: Dockerfile
    container_name: assembly-cpf-service
    networks:
      - application-network

  db:
    container_name: postgres
    image: postgres:15
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db_assembly_vote
    volumes:
      - .\data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - application-network

networks:
  application-network:
    driver: bridge
